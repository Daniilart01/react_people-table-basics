{"version":3,"sources":["App.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","pages/PeoplePage/PeoplePage.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["App","className","role","to","isActive","classNames","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","cn","sex","slug","name","PeoplePage","useState","people","setPeople","error","setError","loading","setLoading","humanId","useParams","displayPeopleTable","useMemo","length","useEffect","data","mappedPeople","map","editedPerson","mother","find","p","motherName","father","fatherName","catch","finally","born","died","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","replace","index"],"mappings":"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","file":"static/js/main.fc9bb252.chunk.js","sourcesContent":["import { Outlet, NavLink } from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={({ isActive }) => classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n      to={`../${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../../components/PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { humanId } = useParams();\n\n  const displayPeopleTable = useMemo(() => {\n    return !error && !loading && !!people.length;\n  }, [error, loading, people]);\n\n  const fetchPeople = () => {\n    setError(false);\n    setPeople([]);\n    setLoading(true);\n    getPeople()\n      .then((data) => {\n        const mappedPeople = data.map((person) => {\n          const editedPerson = { ...person };\n          const mother = data.find((p) => p.name === person.motherName);\n          const father = data.find((p) => p.name === person.fatherName);\n\n          if (mother) {\n            editedPerson.mother = mother;\n          }\n\n          if (father) {\n            editedPerson.father = father;\n          }\n\n          return editedPerson;\n        });\n\n        setPeople(mappedPeople);\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!error && !loading && !people.length) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {displayPeopleTable && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <tr\n                    data-cy=\"person\"\n                    className={cn(\n                      { 'has-background-warning': person.slug === humanId },\n                    )}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {\n                        person.mother\n                          ? <PersonLink person={person.mother} />\n                          : person.motherName || '-'\n                      }\n                    </td>\n                    <td>\n                      {\n                        person.father\n                          ? <PersonLink person={person.father} />\n                          : person.fatherName || '-'\n                      }\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route path=\":humanId?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}